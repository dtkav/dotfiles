# Function to check whether a command exists or not
command_exists() { command -v "$1" >/dev/null 2>&1 ; }

# Environment variables
export DEV="/home/daniel/stash"
export EDITOR="vim"                 # Use vim as default editor
export LESSHISTFILE="-"             # Don't create a less history file
export PYTHONPATH="$DEV/python:$PYTHONPATH"
mkdir -p $DEV

# Colors
export GREP_OPTIONS="--color=auto"
export GREP_COLOR="1;32"
export LESS_TERMCAP_mb=$'\e[1;37m'
export LESS_TERMCAP_md=$'\e[1;37m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[1;47;30m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[0;32m'
function env() { exec /usr/bin/env "$@" | grep -v ^LESS_TERMCAP_ ; }

# Aliases
alias gs="cd $DEV"
alias ..="cd .."
alias ...="cd ../.."
alias vi="vim"
alias ls="ls --color=auto"
alias o="xdg-open"

# Git shortcuts
alias gits="git status"
alias gita="git add"
alias gitc="git pr commit"
alias gitco="git checkout"
alias gitd="git diff"
alias gitp="git push"
alias gitl="git log"
alias git.rm="git diff --diff-filter=D --name-only -z | xargs -0 git rm"

function git_is_merged() {
    revlist=$(git rev-list -1 $1 --not $2)
    if [ $? -eq 0 ]; then
        if [ "$revlist" = "" ]; then
            echo "$1 IS merged into $2."
        else
            echo "$1 is NOT merged into $2."
        fi
    fi
}

# Create dir and cd into it
function mkcd() { mkdir -p "$1" && cd "$1"; }

# List directory contents after cd
function cd() { builtin cd -- "$@" && { [ "$PS1" = "" ] || ls --color; }; }

function dig() { 
   ls -d */ >/dev/null 2>&1;
   if [[ $? -eq 0 && `ls -d */ | wc -l` -eq 1 ]]; 
   then 
      builtin cd `ls -d */`;
      dig;
   fi 
}

# Colors
if [[ -f ~/.bashrc.colors ]]; then
    . ~/.bashrc.colors
fi

# Includes
if [ -f /usr/bin/virtualenvwrapper.sh ] ; then source /usr/bin/virtualenvwrapper.sh ; fi
if [ -f /etc/bash_completion.d/git ] ; then source /etc/bash_completion.d/git ; fi
if [ -f /usr/share/git/git-prompt.sh ] ; then source /usr/share/git/git-prompt.sh ; fi

export PS1='`if [ $? = 0 ]; then echo "\[\033[01;32m\]â"; else echo "\[\033[01;31m\]â"; fi` \[\033[01;30m\]\h\[\033[01;34m\] \w\[\033[35m\]$(__git_ps1 " %s") \[\033[01;30m\]>\[\033[00m\] '

# The next line updates PATH for the Google Cloud SDK.
if [[ -f '/home/daniel/stash/google-cloud-sdk/path.bash.inc' ]]; then
    source '/home/daniel/stash/google-cloud-sdk/path.bash.inc'
fi

# The next line enables bash completion for gcloud.
if [[ -f '/home/daniel/stash/google-cloud-sdk/completion.bash.inc' ]]; then
    source '/home/daniel/stash/google-cloud-sdk/completion.bash.inc'
fi

# The next line enforces correct version of python for gcloud
export CLOUDSDK_PYTHON=/usr/bin/python2.7
