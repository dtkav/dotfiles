# Function to check whether a command exists or not
command_exists() { command -v "$1" >/dev/null 2>&1 ; }

test -f .bashrc.secrets && . $_

# History Settings
export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
export HISTSIZE=100000                   # big big history
export HISTFILESIZE=100000               # big big history
shopt -s histappend                      # append to history, don't overwrite it

# Save and reload the history after each command finishes
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# Environment variables
export EDITOR="vim"                 # Use vim as default editor
export LESSHISTFILE="-"             # Don't create a less history file
export VAGRANT_EXTRA_DIRS="/home/daniel/dotfiles"
export PATH=$PATH:/usr/local/go/bin
export GOPATH="/home/$USER/go"
export PATH=$GOPATH/bin:$PATH

# Colors
#export GREP_OPTIONS="--color=auto"
export GREP_COLOR="1;32"
export GOROOT=$HOME/go
export GOPATH=$HOME/stash/go
export PATH=$PATH:$GOPATH/bin:$GOROOT/bin
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh_auth_sock"

# Colors
export LESS_TERMCAP_mb=$'\e[1;37m'
export LESS_TERMCAP_md=$'\e[1;37m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[1;47;30m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[0;32m'

function env() { exec /usr/bin/env "$@" | grep -v ^LESS_TERMCAP_ ; }

# simple ftp server
function ftpd() {
    docker run -d --rm \
      -v /tmp/vsftpd:/home/vsftpd \
      -p 20:20 \
      -p 21:21 \
      -p 21100-21110:21100-21110 \
      -e FTP_USER="$FTP_USER" \
      -e FTP_PASS="$FTP_PASS" \
      -e PASV_ADDRESS=192.168.1.186 \
      -e PASV_MIN_PORT=21100 \
      -e PASV_MAX_PORT=21110 \
      --user $USER \
      --name vsftpd fauria/vsftpd
}

function killftpd() {
    docker kill vsftpd
}

# update backlight brightness
function backlight() { echo "$1" | sudo tee /sys/class/backlight/intel_backlight/brightness; }

# files containing string in name
function find_file() { find . -name "*$1*"; }

# grep, but limited by file extension
function grep_by_ext() { grep -r --include \*$1 $2 . ; }

# grep -i, but limited by file extension
function grep_i_by_ext() { grep -r -i --include \*$1 $2 . ; }

# git grep, but limited by file extension
function gitgrep_by_ext() { star='*'; ext=$(echo \'$star.$1\'); sh -c "git grep $2 -- $ext"; }

# git grep -i, but limited by file extension
function git_grep_i_by_ext() { star='*'; ext=$(echo \'$star.$1\'); sh -c "git grep -i $2 -- $ext"; }

# like grep_by_ext, but with line context
function grep_context_by_ext() { grep -i -r -B2 -A5 --include \*$1 $2 . ; }

# After each command, append to the history file and reread it
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

# Aliases
alias ..="cd .."
alias ...="cd ../.."
alias status='~/.dwmstatus.sh &'

# git rebase aliases
alias to_resolve='git status --porcelain | awk '\''{ if ($1 == "UU") print $2}'\'''
alias rres='vim -p $(to_resolve)'
alias rcon='git rebase --continue'
alias radd='git add $(to_resolve)'

alias vi="vim"
alias emacs="emacs -nw"
alias clip='xclip -selection c'
alias n="nmcli"
alias sudp="sudo"
alias ls="ls --color=auto"
alias watch="watch --color"
alias ll='ls -alF'
alias ag='apt-get'
alias agi='apt-get install'
alias o="xdg-open"
alias f=find_file
alias ff=grep_by_ext
alias ffi=grep_i_by_ext
alias gg=git_grep_by_ext
alias ggi=git_grep_i_by_ext
alias fff=grep_context_by_ext
alias mem='sudo smem --pie name -c "pss"'
alias vms="vboxmanage list runningvms"
alias fehh='feh --bg-fill ~/pictures/PIA14934_saturn.jpg'
alias bastion='ssh -D 8123 -f -C -q -N $USER@$BASTION'
alias getchrome='wget -N https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O $HOME/downloads/chrome.deb'
alias updatechrome='sudo dpkg -i $HOME/downloads/chrome.deb'
alias up='nmcli c up'
alias wifi='nmcli r wifi'
alias scan='nmcli -f IN-USE,SSID,BSSID,CHAN,BARS d wifi list'
alias ap='scan | grep "^\*"'
alias wide='~/.screenlayout/wide.sh'
alias xps='~/.screenlayout/home.sh'
alias k="kubectl"
alias tags='ctags -R --extra=+f'
alias pyclean='find . -name "*.pyc" -delete'

# Git shortcuts
alias pull="git pull"
alias s="git status"
alias gti="git"
alias pull="git pull"
alias push="git push"
alias add="git add"
alias g="git status"
alias gd="git diff"
alias gits="git status"
alias gita="git add"
alias gitc="git pr commit"
alias gitco="git checkout"
alias gitd="git diff"
alias gitp="git push"
alias gitl="git log"
alias git.rm="git diff --diff-filter=D --name-only -z | xargs -0 git rm"

function git_is_merged() {
    revlist=$(git rev-list -1 $1 --not $2)
    if [ $? -eq 0 ]; then
        if [ "$revlist" = "" ]; then
            echo "$1 IS merged into $2."
        else
            echo "$1 is NOT merged into $2."
        fi
    fi
}

function __schroot() {
    if [[ ! -z $SCHROOT_CHROOT_NAME ]]; then
        echo "$SCHROOT_CHROOT_NAME"
    else
        hostname
    fi
}

# Create dir and cd into it
function mkcd() { mkdir -p "$1" && cd "$1"; }

# List directory contents after cd
function cd() { builtin cd -- "$@" && { [ "$PS1" = "" ] || ls --color; }; }

# Colors
if [[ -f ~/.bashrc.colors ]]; then
    . ~/.bashrc.colors
fi

# Includes
if [ -f /usr/bin/virtualenvwrapper.sh ] ; then source /usr/bin/virtualenvwrapper.sh ; fi
if [ -f /etc/bash_completion.d/git ] ; then source /etc/bash_completion.d/git ; fi
if [ -f /etc/bash_completion.d/git-prompt ] ; then source /etc/bash_completion.d/git-prompt ; fi
if [ -f /usr/share/git/git-prompt.sh ] ; then source /usr/share/git/git-prompt.sh ; fi

export PS1='`if [ $? = 0 ]; then echo "\[\033[01;32m\]✔"; else echo "\[\033[01;31m\]✘"; fi` \[\033[01;30m\]$(__schroot)\[\033[01;34m\] \w\[\033[35m\]$(__git_ps1 " %s") \[\033[01;30m\]>\[\033[00m\] '

# The next line updates PATH for the Google Cloud SDK.
if [[ -f "$HOME/stash/google-cloud-sdk/path.bash.inc" ]]; then
    source "$HOME/stash/google-cloud-sdk/path.bash.inc"
fi

# The next line enables bash completion for gcloud.
if [[ -f "$HOME/stash/google-cloud-sdk/completion.bash.inc" ]]; then
    source "$HOME/stash/google-cloud-sdk/completion.bash.inc"
fi

# The next line enables adds android debugging tools
if [ -d "$HOME/stash/adb-tools" ] ; then
    export PATH="$HOME/stash/adb-tools:$PATH"
fi

# Enable generic bash completion
if [[ -f '/etc/bash_completion' ]]; then
    source '/etc/bash_completion'
fi

# Enable generic bash completion
if [[ -f '/etc/bash_completion.d/git' ]]; then
    source '/etc/bash_completion.d/git'
fi

test -f ~/.git-completion.bash && . $_

# The next line enforces correct version of python for gcloud
export CLOUDSDK_PYTHON=$(which python2)
export PATH=$HOME/node/bin:$PATH
# Android studio workaround for dwm
export _JAVA_AWT_WM_NONREPARENTING=1

# disable ctrl-s/ctrl-q terminal control flow
stty -ixon
